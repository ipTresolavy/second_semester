$date
  Sun Apr 10 15:06:41 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module numeric_bit $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module support $end
$upscope $end
$scope module toplevel $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # hlt $end
$var reg 1 $ ma_we $end
$var reg 1 % mb_we $end
$var reg 32 & ma_addr[31:0] $end
$var reg 32 ' mb_addr[31:0] $end
$var reg 32 ( ma_wrd[31:0] $end
$var reg 32 ) mb_wrd[31:0] $end
$var reg 32 * ma_rdd[31:0] $end
$var reg 32 + mb_rdd[31:0] $end
$var reg 1 , bsy $end
$var reg 1 - m_en $end
$var reg 1 . sim_ctl $end
$scope module mem $end
$var reg 1 / clk $end
$var reg 1 0 mem_we $end
$var reg 1 1 enable $end
$var reg 32 2 mema_addr[31:0] $end
$var reg 32 3 memb_addr[31:0] $end
$var reg 32 4 memb_wrd[31:0] $end
$var reg 32 5 mema_rdd[31:0] $end
$var reg 32 6 memb_rdd[31:0] $end
$var reg 1 7 busy $end
$var reg 17 8 ma_addr[16:0] $end
$var reg 17 9 mb_addr[16:0] $end
$var reg 32 : mb_wrd[31:0] $end
$var reg 32 ; ma_rdd[31:0] $end
$var reg 32 < mb_rdd[31:0] $end
$var reg 1 = bsy $end
$var reg 1 > m_we $end
$var reg 1 ? m_en $end
$var reg 12 @ rom_addr[11:0] $end
$var reg 32 A rom_data[31:0] $end
$scope module rami $end
$var reg 1 B clk $end
$var reg 1 C mem_we $end
$var reg 1 D enable $end
$var reg 17 E mema_addr[16:0] $end
$var reg 17 F memb_addr[16:0] $end
$var reg 32 G memb_wrd[31:0] $end
$var reg 32 H mema_rdd[31:0] $end
$var reg 32 I memb_rdd[31:0] $end
$var reg 1 J busy $end
$upscope $end
$upscope $end
$scope module proc $end
$var reg 1 K clock $end
$var reg 1 L reset $end
$var reg 1 M halted $end
$var reg 1 N mem_we $end
$var reg 1 O mem_enable $end
$var reg 32 P mema_addr[31:0] $end
$var reg 32 Q memb_addr[31:0] $end
$var reg 32 R memb_wrd[31:0] $end
$var reg 32 S mema_rdd[31:0] $end
$var reg 32 T memb_rdd[31:0] $end
$var reg 1 U busy $end
$var reg 1 V pc_en $end
$var reg 1 W ir_en $end
$var reg 1 X sp_en $end
$var reg 1 Y pc_src $end
$var reg 1 Z mem_a_addr_src $end
$var reg 1 [ mem_b_mem_src $end
$var reg 1 \ alu_shfimm_src $end
$var reg 1 ] alu_mem_src $end
$var reg 1 ^ debug $end
$var reg 2 _ mem_b_addr_src[1:0] $end
$var reg 2 ` mem_b_wrd_src[1:0] $end
$var reg 2 a alu_a_src[1:0] $end
$var reg 2 b alu_b_src[1:0] $end
$var reg 3 c alu_op[2:0] $end
$var reg 8 d ir[7:0] $end
$var reg 32 e mema_addr_t[31:0] $end
$var reg 32 f memb_addr_t[31:0] $end
$var reg 32 g memb_wrd_t[31:0] $end
$var reg 1 h mem_we_t $end
$var reg 1 i mem_enable_t $end
$var reg 1 j halted_t $end
$scope module df $end
$var reg 1 k clock $end
$var reg 1 l reset $end
$var reg 32 m mema_addr[31:0] $end
$var reg 32 n memb_addr[31:0] $end
$var reg 32 o memb_wrd[31:0] $end
$var reg 32 p mema_rdd[31:0] $end
$var reg 32 q memb_rdd[31:0] $end
$var reg 1 r pc_en $end
$var reg 1 s ir_en $end
$var reg 1 t sp_en $end
$var reg 1 u pc_src $end
$var reg 1 v mem_a_addr_src $end
$var reg 1 w mem_b_mem_src $end
$var reg 2 x mem_b_addr_src[1:0] $end
$var reg 2 y mem_b_wrd_src[1:0] $end
$var reg 2 z alu_a_src[1:0] $end
$var reg 2 { alu_b_src[1:0] $end
$var reg 1 | alu_shfimm_src $end
$var reg 1 } alu_mem_src $end
$var reg 3 !" alu_op[2:0] $end
$var reg 8 "" instruction[7:0] $end
$var reg 32 #" pc_in[31:0] $end
$var reg 32 $" pc_out[31:0] $end
$var reg 8 %" ir_out[7:0] $end
$var reg 32 &" sp_in[31:0] $end
$var reg 32 '" sp_out[31:0] $end
$var reg 32 (" alu_a[31:0] $end
$var reg 32 )" alu_b[31:0] $end
$var reg 32 *" alu_out[31:0] $end
$var reg 32 +" alu_mem[31:0] $end
$var reg 32 ," imm_shft[31:0] $end
$var reg 32 -" memb_mem[31:0] $end
$scope module pc_rl $end
$var reg 1 ." clock $end
$var reg 1 /" reset $end
$var reg 1 0" load $end
$var reg 32 1" d[31:0] $end
$var reg 32 2" q[31:0] $end
$var reg 32 3" internal[31:0] $end
$upscope $end
$scope module ir_rl $end
$var reg 1 4" clock $end
$var reg 1 5" reset $end
$var reg 1 6" load $end
$var reg 8 7" d[7:0] $end
$var reg 8 8" q[7:0] $end
$var reg 8 9" internal[7:0] $end
$upscope $end
$scope module sp_rl $end
$var reg 1 :" clock $end
$var reg 1 ;" reset $end
$var reg 1 <" load $end
$var reg 32 =" d[31:0] $end
$var reg 32 >" q[31:0] $end
$var reg 32 ?" internal[31:0] $end
$upscope $end
$scope module alu_i $end
$var reg 32 @" a[31:0] $end
$var reg 32 A" b[31:0] $end
$var reg 32 B" f[31:0] $end
$var reg 3 C" s[2:0] $end
$var reg 1 D" z $end
$var reg 1 E" ov $end
$var reg 1 F" co $end
$var reg 32 G" reverse[31:0] $end
$var reg 32 H" res[31:0] $end
$var reg 33 I" ap[32:0] $end
$var reg 33 J" bp[32:0] $end
$var reg 33 K" fp[32:0] $end
$var reg 1 L" ovf $end
$var reg 1 M" cout $end
$scope module flip_op(0) $end
$upscope $end
$scope module flip_op(1) $end
$upscope $end
$scope module flip_op(2) $end
$upscope $end
$scope module flip_op(3) $end
$upscope $end
$scope module flip_op(4) $end
$upscope $end
$scope module flip_op(5) $end
$upscope $end
$scope module flip_op(6) $end
$upscope $end
$scope module flip_op(7) $end
$upscope $end
$scope module flip_op(8) $end
$upscope $end
$scope module flip_op(9) $end
$upscope $end
$scope module flip_op(10) $end
$upscope $end
$scope module flip_op(11) $end
$upscope $end
$scope module flip_op(12) $end
$upscope $end
$scope module flip_op(13) $end
$upscope $end
$scope module flip_op(14) $end
$upscope $end
$scope module flip_op(15) $end
$upscope $end
$scope module flip_op(16) $end
$upscope $end
$scope module flip_op(17) $end
$upscope $end
$scope module flip_op(18) $end
$upscope $end
$scope module flip_op(19) $end
$upscope $end
$scope module flip_op(20) $end
$upscope $end
$scope module flip_op(21) $end
$upscope $end
$scope module flip_op(22) $end
$upscope $end
$scope module flip_op(23) $end
$upscope $end
$scope module flip_op(24) $end
$upscope $end
$scope module flip_op(25) $end
$upscope $end
$scope module flip_op(26) $end
$upscope $end
$scope module flip_op(27) $end
$upscope $end
$scope module flip_op(28) $end
$upscope $end
$scope module flip_op(29) $end
$upscope $end
$scope module flip_op(30) $end
$upscope $end
$scope module flip_op(31) $end
$upscope $end
$upscope $end
$upscope $end
$scope module uc $end
$var reg 1 N" clock $end
$var reg 1 O" reset $end
$var reg 1 P" pc_en $end
$var reg 1 Q" ir_en $end
$var reg 1 R" sp_en $end
$var reg 1 S" pc_src $end
$var reg 1 T" mem_a_addr_src $end
$var reg 1 U" mem_b_mem_src $end
$var reg 1 V" alu_shfimm_src $end
$var reg 1 W" alu_mem_src $end
$var reg 1 X" mem_we $end
$var reg 1 Y" mem_enable $end
$var reg 2 Z" mem_b_addr_src[1:0] $end
$var reg 2 [" mem_b_wrd_src[1:0] $end
$var reg 2 \" alu_a_src[1:0] $end
$var reg 2 ]" alu_b_src[1:0] $end
$var reg 3 ^" alu_op[2:0] $end
$var reg 1 _" mem_busy $end
$var reg 8 `" instruction[7:0] $end
$var reg 1 a" halted $end
$comment next_state is not handled $end
$comment current_state is not handled $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
1"
0#
0$
0%
b00000000000000000000000000000000 &
b00000000000000011111111111111000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
0,
1-
1.
0/
00
11
b00000000000000000000000000000000 2
b00000000000000011111111111111000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
07
b00000000000000000 8
b11111111111111000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
0=
0>
1?
b000000000000 @
b00000000000000000000000000000000 A
0B
0C
1D
b00000000000000000 E
b11111111111111000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
0J
0K
1L
0M
0N
1O
b00000000000000000000000000000000 P
b00000000000000011111111111111000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
0U
0V
0W
0X
0Y
1Z
0[
0\
0]
0^
b00 _
b00 `
b00 a
b00 b
b000 c
b00000000 d
b00000000000000000000000000000000 e
b00000000000000011111111111111000 f
b00000000000000000000000000000000 g
0h
1i
0j
0k
1l
b00000000000000000000000000000000 m
b00000000000000011111111111111000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
0r
0s
0t
0u
1v
0w
b00 x
b00 y
b00 z
b00 {
0|
0}
b000 !"
b00000000 ""
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
b00000000 %"
b00000000000000000000000000000000 &"
b00000000000000011111111111111000 '"
b00000000000000000000000000000000 ("
b00000000000000000000000000000001 )"
b00000000000000000000000000000000 *"
b00000000000000000000000000000000 +"
b00000000000000000000000000000001 ,"
b00000000000000000000000000000000 -"
0."
1/"
00"
b00000000000000000000000000000000 1"
b00000000000000000000000000000000 2"
b00000000000000000000000000000000 3"
04"
15"
06"
b00000000 7"
b00000000 8"
b00000000 9"
0:"
1;"
0<"
b00000000000000000000000000000000 ="
b00000000000000011111111111111000 >"
b00000000000000011111111111111000 ?"
b00000000000000000000000000000000 @"
b00000000000000000000000000000001 A"
b00000000000000000000000000000000 B"
b000 C"
1D"
0E"
0F"
b00000000000000000000000000000000 G"
b00000000000000000000000000000000 H"
b000000000000000000000000000000000 I"
b011111111111111111111111111111110 J"
b011111111111111111111111111111111 K"
0L"
0M"
0N"
1O"
0P"
0Q"
0R"
0S"
1T"
0U"
0V"
0W"
0X"
1Y"
b00 Z"
b00 ["
b00 \"
b00 ]"
b000 ^"
0_"
b00000000 `"
0a"
#1000000
1!
0"
b00001011000010110000101100001011 *
1,
1/
b00001011000010110000101100001011 5
17
b00001011000010110000101100001011 ;
1=
1B
b00001011000010110000101100001011 H
1J
1K
0L
b00001011000010110000101100001011 S
1U
1k
0l
b00001011000010110000101100001011 p
b10000101100001011000010110000000 +"
b00001011000010110000101100001011 -"
1."
0/"
14"
05"
b00001011 7"
1:"
0;"
1N"
0O"
1_"
#2000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#3000000
1!
1/
1B
1K
1k
1."
14"
1:"
1N"
#4000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#5000000
1!
b00000000000000000000000000000001 )
0,
0-
1/
01
b00000000000000000000000000000001 4
07
b00000000000000000000000000000001 :
0=
0?
1B
0D
b00000000000000000000000000000001 G
0J
1K
0O
b00000000000000000000000000000001 R
0U
1V
1W
b001 c
b00000000000000000000000000000001 g
0i
1k
b00000000000000000000000000000001 o
1r
1s
b001 !"
b00000000000000000000000000000001 #"
b00000000000000000000000000000001 &"
b00000000000000000000000000000001 *"
1."
10"
b00000000000000000000000000000001 1"
14"
16"
1:"
b00000000000000000000000000000001 ="
b00000000000000000000000000000001 B"
b001 C"
0D"
0E"
b00000000000000000000000000000001 H"
b000000000000000000000000000000001 J"
b000000000000000000000000000000001 K"
1N"
1P"
1Q"
0Y"
b001 ^"
0_"
#6000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#7000000
1!
b00000000000000011111111111111000 &
b00000000000000011111111111111100 '
b00000000000000011111111111111100 )
1/
b00000000000000011111111111111000 2
b00000000000000011111111111111100 3
b00000000000000011111111111111100 4
b11111111111111000 8
b11111111111111100 9
b00000000000000011111111111111100 :
1B
b11111111111111000 E
b11111111111111100 F
b00000000000000011111111111111100 G
1K
b00000000000000011111111111111000 P
b00000000000000011111111111111100 Q
b00000000000000011111111111111100 R
0V
0W
0Z
1\
b11 _
b01 a
b00001011 d
b00000000000000011111111111111000 e
b00000000000000011111111111111100 f
b00000000000000011111111111111100 g
1k
b00000000000000011111111111111000 m
b00000000000000011111111111111100 n
b00000000000000011111111111111100 o
0r
0s
0v
b11 x
b01 z
1|
b00001011 ""
b00000000000000011111111111111100 #"
b00000000000000000000000000000001 $"
b00001011 %"
b00000000000000011111111111111100 &"
b00000000000000011111111111111000 ("
b00000000000000000000000000000100 )"
b00000000000000011111111111111100 *"
b10000101100001011000010110001011 +"
b00000000000000000000000000000100 ,"
1."
00"
b00000000000000011111111111111100 1"
b00000000000000000000000000000001 2"
b00000000000000000000000000000001 3"
14"
06"
b00001011 8"
b00001011 9"
1:"
b00000000000000011111111111111100 ="
b00000000000000011111111111111000 @"
b00000000000000000000000000000100 A"
b00000000000000011111111111111100 B"
b00011111111111111000000000000000 G"
b00000000000000011111111111111100 H"
b000000000000000011111111111111000 I"
b000000000000000000000000000000100 J"
b000000000000000011111111111111100 K"
1N"
0P"
0Q"
0T"
1V"
b11 Z"
b01 \"
b00001011 `"
#8000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#9000000
1!
1#
1/
1B
1K
1M
1j
1k
1."
14"
1:"
1N"
1a"
#10000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#11000000
1!
0.
1/
1B
1K
1k
1."
14"
1:"
1N"
#12000000
0!
0/
0B
0K
0k
0."
04"
0:"
0N"
#13000000
